// ########################
// #  Template Framework  #
// #  ~~~~~~~~~~~~~~~~~~~ #
// ########################

// NOTE: A lot of this is a combination of what I considered the best parts of the Primitive and Skeleton CSS Frameworks.

// NOTE: For each project use the framework for development, change things as needed, add things ass needed, and once the project is complete remove everything unneccessary, and minify this sheet.

// Table of Contents:
// ~~~~~~~~~~~~~~~~~~~
// 1.) Variables
// 2.) Mixins
// 3.) Base Styles
// 4.) Typography (links)
// 5.) Scaffolding
// 6.) Helpers
// 7.) Grid
// 8.) Components
//   a.) Navs
//   b.) Footer
//   c.) Buttons
//   d.) Forms
//   e.) Tables
//   f.) Lists
//   g.) Code
//   h.) Collapsible
//   i.) Carousel
//   j.) Slider
//   k.) Modals
//   l.) Parallax
//   m.) Pushpin
//   n.) ScrollFire
//   o.) Scrollspy
//   p.) Tabs
//   q.) Cards
//   r.) Loaders
//   s.) APIs

// 1.) Variables:
// ~~~~~~~~~~~~~~~

/* Colors */

$black: #000;
$white: #fff;
$blue: #0000FF;
$yellow: #FFFF00;
$green: #008000;
$orange: #FFA500;
$red: #FF0000;
$cyan: #00FFFF;
$magenta: #FF00FF;

/* Background Colors */
.black-background {
	background-color: $black;
}

.white-background {
	background-color: $white;
}

.blue-background {
	background-color: $blue;
}

.yellow-background {
	background-color: $yellow;
}

.green-background {
	background-color: $green;
}

.orange-background {
	background-color: $orange;
}

.red-background {
	background-color: $red;
}
.cyan-background {
	background-color: $cyan;
}

.magenta-background {
	background-color: $magenta;
}

/* Text Colors */

.black-text {
	text-color: $black;
}

.white-text {
	text-color: $white;
}

.blue-text {
	text-color: $blue;
}

.yellow-text {
	text-color: $yellow;
}

.green-text {
	text-color: $green;
}

.orange-text {
	text-color: $orange;
}

.red-text {
	text-color: $red;
}
.cyan-text {
	text-color: $cyan;
}

.magenta-text {
	text-color: $magenta;
}


/* Typography */

/* Components */

// 2.) Mixins:
// ~~~~~~~~~~~~

/* Breakpoints */

// Small breakpoint
@mixin small-breakpoint {
	@media (min-width: #{$mobile}) {
		@content;
	}
}

// Large breakpoint
@mixin large-breakpoint {
	@media (min-width: #{$desktop}) {
		@content;
	}
}

// 3.) Base Styles:
// ~~~~~~~~~~~~~~~~~

//Reset Border Box:

html {
  box-sizing: border-box;
}

*, *:before, *:after {
  box-sizing: inherit;
}


// 4.) Typography:
// ~~~~~~~~~~~~~~~~

/* Font */

// Headings

// Body Font

// Links:
a {
  cursor: pointer;
}

// 5.) Scaffolding:
// ~~~~~~~~~~~~~~~~~

// 6.) Helpers:
// ~~~~~~~~~~~~~

.responsive-img {
	width: 100%;
}

.bordered {
	border: solid 2px black;
}

.centered {
	justify-content: center;
}

.text-centered {
	text-align: center;
}

// 7.) Grid:
// ~~~~~~~~~~

// NOTE: Once this is completed and reliable, use this article ( https://kyusuf.com/post/almost-complete-guide-to-flexbox-without-flexbox ) to rewrite it w/out flexbox for all browser support.
// NOTE When possible, use CSS Grid with these variables. If browser not supported use the below classes to create a grid.

/*Variables: */

// Containers:
$x-small: 600px;
$small: 800px;
$medium: 1000px;
$large: 1200px;
$full-width: 100%;

// Columns:
$full: 100%;
$one-third: calc(100% / 3);
$two-thirds: calc(100% * (2/3));
$one-quarter: calc(100% / 4);
$one-half: calc(100% / 2);
$three-quarters: calc(100% * (3/4));

// Breakpoints:
$mobile: $x-small;
$desktop: $medium;

// Containers:
.container {
	max-width: $full-width;
};
.x-small-container {
	max-width: $x-small;
};
.small-container {
	max-width: $small;
};
.medium-container {
	max-width: $medium;
};
.large-container {
	max-width: $large;
};

// Row:

.row {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

// Columns:

.one-third-column,
.two-thirds-column,
.one-quarter-column,
.one-half-column,
.three-quarters-column, {
	flex: 100%;
}

.column {
	flex: 100%;
}

// Responsive Grid Media Query:
@media screen and (min-width: 800px) {

	//NOTE For evenly sized columns use this:
	.column {
	  flex: 1;
		height: auto;
	}

	//NOTE For unevenly sized columns, use these

	.one-third-column {
		flex-basis: $one-third;
		height: auto;
	}

	.two-thirds-column {
		flex-basis: $two-thirds;
		height: auto;
	}

	.one-quarter-column {
		flex-basis: $one-quarter;
		height: auto;
	}

	.one-half-column {
		flex-basis: $one-half;
		height: auto;
	}

	.three-quarters-column {
		flex-basis: $three-quarters;
		height: auto;
	}
}

// 8.) Components:
// ~~~~~~~~~~~~~~~~

/* Buttons */

//NOTE Redo with variables, and make it a mixin etc.
button {
  // background-color: white;
  border-radius: 5px;
  cursor: pointer;
  padding: 0.5em 1em;
  text-align: center;
  transition-duration: 0.4s;
	&:active {
		//Figure out how to move the text inside the button when clicked.
	}
  &:hover {
    background-color: grey;
    color: white;
  }
  &.disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background-color: white;
    color:black;
  }
  &.pill {
		border: black solid 2px;
    border-radius: 30px;
  }
	&.square {
		border: black solid 2px;
	}
}
